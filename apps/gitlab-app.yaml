apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: gitlab
  namespace: argocd
spec:
  project: default
  source:
    # The official GitLab Helm chart repository.
    repoURL: https://charts.gitlab.io/
    chart: gitlab
    targetRevision: "9.1.1" 

    helm:
      # We paste the contents of gitlab-values.yaml here directly
      # to make the Application manifest self-contained and explicit.
      values: |
        # =========================================================================
        # GitLab Values Optimized for k3s Project
        # =========================================================================
        # This configuration is heavily stripped down for non-production,
        # resource-constrained environments. Do not use this in production.

        global:
          # Domain and Ingress Config
          hosts:

            domain: blackcat.co.ke
            https: true
            gitlab:
              name: gitlab.blackcat.co.ke
          ingress:
            # Using the default Traefik that comes with k3s.
            configureCertmanager: false 
            class: traefik
            provider: traefik
            annotations:
              # IMPORTANT: Replace with the name of your ClusterIssuer.
              # This tells cert-manager to automatically issue a TLS certificate.
              cert-manager.io/cluster-issuer: "letsencrypt-prod" 
              # Ensures Traefik handles this Ingress resource.
              kubernetes.io/ingress.class: "traefik"

          # Persistence
          # Longhorn
          persistence:
            storageClass: longhorn

          # Secrets Config
          # Define the names of the secrets manually
          # to prevent the chart from auto-generating them.
          psql:
            password:
              secret: gitlab-postgresql-password
              key: password
          redis:
            password:
              secret: gitlab-redis-password
              key: password
          # Gitaly and Shell secrets will be handled by the chart.

        # =========================================================================
        # Component-Specific Configuration
        # =========================================================================

        # Disable Non-Essential Components
        # that are not core to the GitLab experience
        # or that we provide ourselves.
        upgradeCheck:
          enabled: false # Disable upgrade check for new installations.
        nginx-ingress:
          enabled: false # We use Traefik instead.
        prometheus:
          install: false # We use our own kube-prometheus-stack
        certmanager:
          install: false # We already have it.
        gitlab-runner:
          install: false # Can be added later; not needed for the base install.
        gitlab:
          kas:
            enabled: false # Disable Kubernetes Agent Server to save resources.
        # Resource Tuning (CRITICAL for local clusters)
        # The webservice is the main GitLab web application.
          webservice:
            rails:
              trusted_proxies:
                - 10.42.0.0/16
                - 10.43.0.0/16

            resources:
              requests:
                cpu: 150m
                memory: 2.0Gi # GitLab needs at least this much to be stable.
              limits:
                memory: 3.0Gi
        # Sidekiq runs background jobs.
          sidekiq:
            resources:
              requests:
                cpu: 100m
                memory: 600Mi
        # Gitaly handles Git repository access.
        gitaly:
          resources:
            requests:
              cpu: 100m
              memory: 300Mi
        # Use the bundled, non-HA PostgreSQL database.
        postgresql:
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
        # Use the bundled Redis instance.
        redis:
          resources:
            requests:
              cpu: 50m
              memory: 256Mi
  destination:
    server: https://kubernetes.default.svc
    namespace: gitlab

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
  
  # Ignore differences for secrets that are auto-generated by the chart itself.
  # This prevents Argo CD from getting stuck in a sync loop.
  ignoreDifferences:
  - group: ""
    kind: Secret
    name: gitlab-gitaly-secret
  - group: ""
    kind: Secret
    name: gitlab-gitlab-shell-secret
  - group: ""
    kind: Secret
    name: gitlab-rails-secret
  - group: ""
    kind: Secret
    name: gitlab-workhorse-secret